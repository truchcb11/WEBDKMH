
@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WEBDKMH.Models.ResetPasswordViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <style>
        body {
            padding-top: 100px;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .context {
            margin: auto;
            width: 400px;
            padding: 50px 40px 40px 40px; /* Chỉnh padding-top thành 50px */
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: #f9f9f9;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h2 {
            margin-bottom: 30px;
            text-align: center;
        }

        .form-group {
            margin-bottom: 20px;
        }

            .form-group label {
                display: block;
                margin-bottom: 10px;
            }

        input[type="password"],
        input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .btntx {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
        }

        .btn:hover {
            background-color: #0056b3;
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
        }

        .alert-danger {
            color: #ff0000;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }
    </style>
</head>
<body>

    <div class="context">
        <h2>Reset Password</h2>
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
                <div class="password-container">
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", required = "required" })
                    <span class="toggle-password" onclick="togglePassword('OldPassword')">Show</span>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                <div class="password-container">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
                    <span class="toggle-password" onclick="togglePassword('Password')">Show</span>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                <div class="password-container">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", required = "required" })
                    <span class="toggle-password" onclick="togglePassword('ConfirmPassword')">Show</span>
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btntx">Reset Password</button>
        }
    </div>
    <script>
        function togglePassword(inputId) {
            var input = document.getElementById(inputId);
            var type = input.getAttribute('type') === 'password' ? 'text' : 'password';
            input.setAttribute('type', type);
            var toggleSpan = input.nextElementSibling;
            toggleSpan.textContent = type === 'password' ? 'Show' : 'Hide';
        }
    </script>
</body>
</html>
@if (TempData["SuccessMessage"] != null)
    {
<div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

